using System;

using Schemas.BlockPlatform;

namespace Schemas
{
	/// <summary>
	/// Класс, обобщающий методы работы с хранилищем данных.
	/// Представляет API хранилища сборок, контейнеров и справочников.
	/// Этот интерфейс нужен для возможности обращения к хранилищу из объекта Session.
	/// </summary>

	public abstract class IAsmDealer
	{
		/// <summary>
		/// Сохранение сборки в БД.
		/// </summary>
		/// <param name="BlockType">адрес типа блока (объект справочника "Типы блоков")</param>
		/// <param name="parent">Поддержка дерева.Родитель.Это ссылка на блок, являющийся Родителем для блока.</param>
		/// <param name="treeorder">Поддержка дерева. Последовательность блока в списке детей Родителя (порядок блока в дереве).
		///		Можно задать явно.Можно задать = 0, тогда функция должна определить последний максимальный номер атрибута и
		///		присвоить новому атрибуту последний максимальный номер +1</param>
		/// <returns>адрес добавленного объекта</returns>
		public abstract void Save(AssemblyBase asm);

	}
}
